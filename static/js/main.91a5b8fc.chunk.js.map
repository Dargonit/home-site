{"version":3,"sources":["Home.jsx","assets/Icon-funny.png","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","React","Component","Navbar","to","src","icon","alt","href","id","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAeeA,E,4JAXX,WACI,OACI,sBAAKC,UAAU,MAAf,UACI,+CAGI,2E,GAPDC,IAAMC,WCHV,MAA0B,uCCgC1BC,MA1Bf,WACI,OACI,8BACI,mCACI,8BACI,qBAAIH,UAAU,OAAd,UACI,oBAAIA,UAAU,OAAd,SAAqB,eAAC,IAAD,CAAMI,GAAG,IAAT,UAAa,qBAAKJ,UAAU,OAAOK,IAAKC,EAAMC,IAAI,UAAlD,SACrB,qBAAIP,UAAU,OAAd,cAAsB,cAAC,IAAD,CAAMI,GAAG,IAAT,sBACtB,oBAAIJ,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAMI,GAAG,SAAT,sBACrB,oBAAIJ,UAAU,SAAd,SAAuB,mBAAGQ,KAAK,IAAR,SAAY,mBAAGR,UAAU,aAAaS,GAAG,kBAIxE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,eCZTC,MAVf,WACE,OACE,8BACE,iCACE,cAAC,EAAD,SCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.91a5b8fc.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass Home extends React.Component{\n    render(){\n        return (\n            <div className=\"App\">\n                <header>\n                    Home Page\n                </header>\n                    <div>Will  plant interactive tree here</div>\n            </div>\n        );\n    }\n}\nexport default Home;","export default __webpack_public_path__ + \"static/media/Icon-funny.345c8aa7.png\";","import {Route, Switch,Link} from \"react-router-dom\";\nimport '../styles/Navbar.css';\nimport Home from \"../Home\";\nimport About from \"../App\";\nimport icon from \"../assets/Icon-funny.png\"\n\nfunction Navbar() {\n    return (\n        <div>\n            <header >\n                <nav>\n                    <ul className=\"menu\">\n                        <li className=\"logo\"><Link to=\"/\"><img className=\"icon\" src={icon} alt=\"Kitty\"/> </Link></li>\n                        <li className=\"item\"> <Link to=\"/\">Home </Link></li>\n                        <li className=\"item\"><Link to=\"/about\">About </Link></li>\n                        <li className=\"toggle\"><a href=\"#\"><i className=\"fa fa-bars\" id=\"bars\"></i></a></li>\n\n                    </ul>\n                </nav>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home></Home>\n                    </Route>\n                    <Route exact path=\"/about\">\n                        <About></About>\n                    </Route>\n                </Switch>\n            </header>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import Navbar from \"./components/Navbar\"\n\nfunction App() {\n  return (\n    <div>\n      <header >\n        <Navbar></Navbar>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}